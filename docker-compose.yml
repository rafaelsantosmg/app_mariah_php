services:
  # Backend (Laravel ou outra aplicação PHP)
  api:
    container_name: mariah_api
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./backend:/var/www
    depends_on:
      - redis
      - db
    networks:
      - laravel

  # Frontend (React/Vue/Next.js)
  app:
    container_name: mariah_app
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=development
    depends_on:
      - api
    networks:
      - laravel

  # Nginx para servir o backend
  nginx:
    container_name: mariah_nginx
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www
      - ./backend/docker/nginx/:/etc/nginx/conf.d/  # Certifique-se de que o nginx.conf está correto
    networks:
      - laravel

  # Banco de Dados PostgreSQL
  db:
    container_name: mariah_db
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-mariah_db}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - ./.docker/postgres/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - laravel

  # Adminer (Interface para gerenciar o PostgreSQL)
  adminer:
    container_name: mariah_adminer
    image: adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
    networks:
      - laravel

  # Redis
  redis:
    container_name: mariah_redis
    image: redis:latest
    networks:
      - laravel

networks:
  laravel:
    driver: bridge

volumes:
  database:
    driver: local
